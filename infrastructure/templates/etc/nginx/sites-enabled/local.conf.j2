upstream plex {
  server 127.0.0.1:32400 fail_timeout=0;
}

upstream graylog {
  server 127.0.0.1:9000 fail_timeout=0;
}

upstream glances {
  server 127.0.0.1:7001 fail_timeout=0;
}

upstream hass {
  server 127.0.0.1:8123 fail_timeout=0;
}

upstream grafana {
  server 127.0.0.1:4100 fail_timeout=0;
}

upstream torrent {
  server 127.0.0.1:8112 fail_timeout=0;
}

upstream flexget {
  server 127.0.0.1:5050 fail_timeout=0;
}

server {
  listen 80;
  listen [::]:80;
  server_name {{ local_domain }};
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  ssl on;
  ssl_certificate {{ jarvis_dir }}/.minica/{{ local_domain }}/cert.pem;
  ssl_certificate_key {{ jarvis_dir }}/.minica/{{ local_domain }}/key.pem;
  server_name {{ local_domain }};

  allow 192.168.0.0/16;
  deny all;

  location /graylog/ {
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Graylog-Server-URL https://$server_name/graylog/;
    rewrite          ^/graylog/(.*)$  /$1  break;
    proxy_pass       http://graylog;
  }

  location /plex {
    return 301 $scheme://$host/plex/;
  }

  location ^~ /plex/ {
    set $upstream_plex plex;
    rewrite /plex(.*) $1 break;
    proxy_pass http://$upstream_plex;

    proxy_set_header X-Plex-Client-Identifier $http_x_plex_client_identifier;
    proxy_set_header X-Plex-Device $http_x_plex_device;
    proxy_set_header X-Plex-Device-Name $http_x_plex_device_name;
    proxy_set_header X-Plex-Platform $http_x_plex_platform;
    proxy_set_header X-Plex-Platform-Version $http_x_plex_platform_version;
    proxy_set_header X-Plex-Product $http_x_plex_product;
    proxy_set_header X-Plex-Token $http_x_plex_token;
    proxy_set_header X-Plex-Version $http_x_plex_version;
    proxy_set_header X-Plex-Nocache $http_x_plex_nocache;
    proxy_set_header X-Plex-Provides $http_x_plex_provides;
    proxy_set_header X-Plex-Device-Vendor $http_x_plex_device_vendor;
    proxy_set_header X-Plex-Model $http_x_plex_model;
  }


  if ($http_referer ~* /plex) {
    rewrite ^/web/(.*) /plex/web/$1? redirect;
  }

  location /glances {
    rewrite /glances/(.*) /$1 break;
    proxy_pass http://glances/;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

   location /api/webhook {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass http://hass/api/webhook;
  }

  location /ping.txt {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://hass/local/ping.txt;
  }

  location / {
    proxy_pass http://hass/;
    proxy_set_header Host $host;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /transmission {
    proxy_pass          http://torrent;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_redirect      off;
    proxy_buffering     off;
    proxy_set_header    Host            $host;
    proxy_set_header    X-Real-IP       $remote_addr;
    proxy_pass_header X-Transmission-Session-Id;
    proxy_hide_header X-Frame-Options;
  }

  location /flexget {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_pass http://flexget;
  }

  error_page 404 403 @error;

  location @error {
    root /var/www;
    try_files /403.html /403.html;
  }

  client_max_body_size 50M;
  keepalive_timeout 10;
}
